!!!  gastona demo sample

    Demonstrates how to use xmelon listix command and visualizes
    the database it generates.
    
#gastona#

   <fusion>
      META-GASTONA/utilApp/std/ExportBasicDialog.gasti

#javaj#

    <frames> layMain, "XMeLon for files", 700, 600

    <iconApp> META-GASTONA/utilApp/xmelon.png

    <layout of layMain>
       EVA, 7, 7, 4, 4

           ,  X
         A , laySource
         10,
         X , layDBVisor


   <layout of laySource>
      PANEL, X, XML Source

      layXmlSource

   <layout of layXmlSource>
      EVA, 7, 7, 4, 4

      , , X
      , lExtensions containing xml, eExtensions,
      , lFile or directory, eXmlSourceFileOrDir, bSearchFile, bSearchDir
      , bXMeLon parse     , lStatus

   <layout of layDBVisor>
      PANEL, X, XMeLon Database Visor

      esplata

    <layout of esplata>
      SPLIT, X, framilia

      aSchema, visor

    <layout of visor>
       EVA, 7, 7, 4, 4

      , X
    X , sVisor
      , layExportBasic

   <sysDefaultImages>
      javaj/img/column.gif, Tree.leafIcon
      javaj/img/table.gif, Tree.secondRootIcon, Tree.rootIcon,
      javaj/img/tableconnection.gif, Tree.openIcon, Tree.closedIcon

#data#

   <lStatus>

   <eXmlSourceFileOrDir> http://www.w3schools.com/xml/cd_catalog.xml

   <aSchema rootTitle> Xmelon Schema
   <aSchema var> theDBDeepSchema
   <aSchema separator> " "

   <theDBDeepSchema>

   <eExtensions> "xml kml"

   <bSearchDir DIALOG> DIR
   <bSearchDir image> javaj\img\folder.png

   <bSearchFile DIALOG> FILE
   <bSearchFile image> javaj\img\leaf.png

#listix#


   <-- bSearchDir>     -->, eXmlSourceFileOrDir,, @<bSearchDir chosen>
   <-- bSearchFile>    -->, eXmlSourceFileOrDir,, @<bSearchFile chosen>

   <-- bXMeLon parse>        LSX, PARSE IT
   <-- eXmlSourceFileOrDir>  LSX, PARSE IT
   <-- eExtensions>          LSX, PARSE IT

   <-- aSchema>
      CHECK, VAR, aSchema selectedPath
      CHECK, !=, "", @<aSchema selectedPath>

      VAR=, sqlDeepDeveloped, @<sql deep>

      -->, eSQLQuery, ,@<sqlDeepDeveloped>
      -->, sVisor, sqlSelect, @<sqlDeepDeveloped>
      LSX, ExportBasic set (gridName dbName), sVisor, ""

   <PARSE IT>
      CHECK, DIR, @<eXmlSourceFileOrDir>, LSX, PARSE FILE
      LSX, PARSE DIR

   <PARSE FILE>
      LSX, START PARSING, file
      XMELON, FILE2DB, @<eXmlSourceFileOrDir>
      @<finalize xmelon DB>

   <PARSE DIR>
      LSX, START PARSING, directory
      SCAN, ADD FILES,, @<eXmlSourceFileOrDir>
          , EXTENSIONS, @<eExtensions>
      XMELON, CACHE, 1
      LOOP, SQL,, //SELECT fullPath FROM scan_all
          ,, XMELON, FILE2DB, @<fullPath>
      XMELON, CACHE, 0
      LSX, finalize xmelon DB

   <finalize xmelon DB>
      XMELON, CONTENT VIEWS
      DB,, SCHEMA, theDBSchema
      DEEPDB, LOAD CONNECTIONS,, theDBConnections, 1
      DEEPDB, DEEP SCHEMA, theDBDeepSchema, theDBSchema, theDBConnections
      MSG, aSchema data!
      -->, lStatus data!,, //done in @<elapsed> seconds

   <START PARSING>
      VAR=, STARTSTAMP, @<:lsx CLOCK>
      -->, lStatus data!,, //parsing @<p1> ...
  
   <elapsed> =, (@<:lsx CLOCK> - STARTSTAMP) / 1000
  
   <sql deep>
      DBMORE, TOSQL, aSchema selectedMultiPath
            , VARCONNECTIONS, theDBConnections
            , DEEP COL HEADER, 1
            , LINE BREAK, 0
