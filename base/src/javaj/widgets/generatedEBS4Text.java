//AUTOMATIC GENERATED AND WRITABLE SOURCE!
//  Generated by the listix script "javaj/widgets/widgetLabor/inc/generateOneEBS.gasti" (09.12.2007 18:02)
//  on 15.02.2009 22:15

/*
package javaj.widgets
Copyright (C) 2009 Alejandro Xalabarder

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA.
*/

package javaj.widgets;

import de.elxala.langutil.*;      // for attributes of type "int"
import de.elxala.Eva.*;
import javaj.widgets.basics.*;

/**
  EvaBasedStructure (EBS) for zWidgets of type text

  Attributes:

      "visible"    Value 0 to make the widget not visible
      "enabled"    Value 0 to disable the widget
      "wrapLines"    true if the lines has to be wraped according to text width
      "tabulator"    size in spaces of tabulator
      "fileName"    file to be used in messages "load" and "save"
      "lineToGo"    line number to go on a message "goto"

  Messages:

      "load"    loads the contents from the file given in attribute "fileName"
      "save"    saves the contents to the file given in attribute "fileName"
      "clear"    clears the contents of the text
      "gotoLine"    set the cursor and scroll if needed to a line given in "line2go" attribute

*/
public class generatedEBS4Text extends widgetEBS
{
   // Attributes
   //
   public static final String sATTR_VISIBLE = "visible";
   public static final String sATTR_ENABLED = "enabled";
   public static final String sATTR_WRAPLINES = "wrapLines";
   public static final String sATTR_TABULATOR = "tabulator";
   public static final String sATTR_FILENAME = "fileName";
   public static final String sATTR_LINETOGO = "lineToGo";

   // Messages
   //
   public static final String sMSG_LOAD = "load";
   public static final String sMSG_SAVE = "save";
   public static final String sMSG_CLEAR = "clear";
   public static final String sMSG_GOTOLINE = "gotoLine";
   public static final String sMSG_INSERT = "insert";
   public static final String sMSG_NEWLINE = "newLine";
   public static final String sMSG_UNDO = "undo";
   public static final String sMSG_REDO = "redo";

   // Other variables
   //

   /// Constructor
   //
   public generatedEBS4Text (String nameWidget, EvaUnit pData, EvaUnit pControl)
   {
      super (nameWidget, pData, pControl);
   }

   /// getter for attribute visible: Value 0 to make the widget not visible
   public boolean getIsVisible ()
   {
      return "1".equals (getSimpleAttribute (CONTROL, sATTR_VISIBLE, "1"));
   }

   /// setter for attribute visible: Value 0 to make the widget not visible
   public void setIsVisible (boolean value)
   {
      setSimpleAttribute (CONTROL, sATTR_VISIBLE, (value ? "1": "0"));
   }

   /// getter for attribute enabled: Value 0 to disable the widget
   public boolean getIsEnabled ()
   {
      return "1".equals (getSimpleAttribute (CONTROL, sATTR_ENABLED, "1"));
   }

   /// setter for attribute enabled: Value 0 to disable the widget
   public void setIsEnabled (boolean value)
   {
      setSimpleAttribute (CONTROL, sATTR_ENABLED, (value ? "1": "0"));
   }

   /// getter for attribute wrapLines: true if the lines has to be wraped according to text width
   public boolean getIsWrapLines ()
   {
      return "1".equals (getSimpleAttribute (CONTROL, sATTR_WRAPLINES, "0"));
   }

   /// setter for attribute wrapLines: true if the lines has to be wraped according to text width
   public void setIsWrapLines (boolean value)
   {
      setSimpleAttribute (CONTROL, sATTR_WRAPLINES, (value ? "1": "0"));
   }

   /// getter for attribute tabulator: size in spaces of tabulator
   public int getTabulator ()
   {
      return stdlib.atoi (getSimpleAttribute (CONTROL, sATTR_TABULATOR, "5"));
   }

   /// setter for attribute tabulator: size in spaces of tabulator
   public void setTabulator (int value)
   {
      setSimpleAttribute (CONTROL, sATTR_TABULATOR, "" + value);
   }

   /// getter for attribute fileName: file to be used in messages "load" and "save"
   public String getFileName ()
   {
      return getSimpleAttribute (DATA, sATTR_FILENAME, "");
   }

   /// setter for attribute fileName: file to be used in messages "load" and "save"
   public void setFileName (String value)
   {
      setSimpleAttribute (DATA, sATTR_FILENAME, value);
   }

   /// getter for attribute lineToGo: line number to go on a message "goto"
   public int getLineToGo ()
   {
      return stdlib.atoi (getSimpleAttribute (CONTROL, sATTR_LINETOGO, "0"));
   }

   public boolean hasLineToGo ()
   {
      return getSimpleAttribute (CONTROL, sATTR_LINETOGO) != null;
   }

   /// setter for attribute lineToGo: line number to go on a message "goto"
   public void setLineToGo (int value)
   {
      setSimpleAttribute (CONTROL, sATTR_LINETOGO, "" + value);
   }

}
