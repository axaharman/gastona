/*
   //(o) gastonaDoc_source javaj_intro

   ========================================================================================
   ================ documentation for WelcomeGastona.gast =================================
   ========================================================================================

#gastonaDoc#

   <docType>    gastona
   <name>       " 3-Calling Gastona"
   <groupInfo>
   <javaClass>
   <importance> 2
   <desc>       //Calling Gastona

   <help>
      //
      // Gastona is a java application therefore it needs java being previously installed. It can run even
      // in java versions lower than 1.5, it has been tested in Windows platform (XP/Vista etc), in
      // Ubuntu Linux (need Sun Java installed), as well as in Mac OS X.
      //
      // Once java is installed, launching a gastona script is simply calling gastona.jar with the
      // script name as argument. You can associate the extension of the script (i.e. .gast) with
      // the call, in order to run gastona scripts by double-click.
      //
      // The call to launch a script from the command line or shell is:
      //
      //       java -jar gastona.jar myScript.gast [ parameters ... ]
      //       or
      //       javaw -jar gastona.jar myScript.gast [ parameters ... ]
      //       in order to avoid the default java console
      //
      // The parameters are passed to the script and they can be read by it (see Listix command LISTIX and parameters).
      //
      // Calling gastona.jar with no arguments (with no script) usually launches this documentation, but not
      // necessarily. When no script is given explicity Gastona search for a default script to launch in this order:
      //
      //    1) If the script "autoStart.gast" is found in the current directory (or home directory in case of
      //       Linux) then this script is launched.
      //    2) If not 1) but the script "autoStart.gast" is found in the classpath (e.g. within the jar file) then
      //       it is launched this script.
      //    3) If neither 1) nor 2) then the script META-GASTONA/WelcomeGastona/WelcomeGastona.gast is launched.
      //       This script is contained in gastona.jar file
      //
      // The gastona documentation can be launched as well using
      //
      //    java -jar gastona.jar META-GASTONA/WelcomeGastona/WelcomeGastona.gast
      //
      // Sample gast scripts in WelcomeGastona.gast
      // ---------------------------------------------
      //
      // The documentation contains lots of sample scripts. You may copy the text and save it into some ".gast"
      // file using an editor and then launch it as described above. It is also possible to launch the sample
      // directly from WelcomeGastona through the button "Run Sample".
      //
      // All samples in WelcomeGastona use temporary files that are deleted when leaving the
      // application. This is convenient to access the documentation and check the samples without
      // installing or affecting any files in the target computer, even it is possible to launch
      // it from a read only media like a CD-ROM etc.
      //
      // Whereas providing persistence to a gastona script is straighfoward, for instance the script
      //
      //     #gastona#
      //
      //       <fusion>
      //          META-GASTONA/WelcomeGastona/WelcomeGastona.gast
      //
      //     #listix#
      //
      //       <persistFile>  @<:sys user.home>/.WelcomeGastona
      //
      //       <main0>
      //          LOAD, data, @<persistFile>
      //
      //       <-- javaj exit>
      //          DUMP, data, @<persistFile>
      //
      // would launch WelcomeGastona restoring the last window position and size and other application
      // states.

   <examples>
      gastSample

      test .gastonaLocal

   <test .gastonaLocal>
      //
      //    This script will check if .gastonaLocal is found in the user home directory and, if found
      //    will check the variable <tool java>
      //
      //#javaj#
      //
      //    <frames> oConsole, "Checking .gastonaLocal"
      //
      //#listix#
      //
      //   <localFile> @<:sys user.home>/.gastonaLocal
      //
      //   <main0>
      //      //Checking <tool java> and <tool browser> in "@<localFile>"
      //      //
      //      CHECK, FILE, @<localFile>, //File not found!
      //      LOAD, data, @<localFile>
      //
      //      //
      //      //===== CHECK <tool java>
      //      //
      //      CHECK, VAR, tool java, //variable <tool java> not found!
      //      //variable <tool java> found with value @<tool java>. Calling java -version ...
      //      CALL, @<tool java> -version
      //

#**FIN_EVA#

*/
