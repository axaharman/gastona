
   21.06.2009 19:52
   oneDocToSql.lsx

   Generates the sql statements for the gastona documentation of one single item
   the data has to contain this item (typically a #gastonaDoc# unit)

   Example:

      In order to generate the sql's for the documentation contained in
      one file into the unit #gastonaDoc#

      GENERATE, @<fileToGenerate>, generateSql for Doc
              , LOAD FORMATS, oneDocToSql.lsx, listix
              , LOAD DATA   , @<fullPath>    , gastonaDoc

      where @<fileToGenerate> is the file to generate with sql statments (use "+" to use the file
      of a previous GENERATE command)
      and @<fullPath> is the file containing the documentation

#listix#

   <ensure javaClass>
      CHECK, VAR, javaClass, SET VAR, javaClass, ""

   <generateSql for Doc>
      @<ensure javaClass>

      <! for all gastona documentation
      @<insert into tGastItemDoc>
      @<insert examples>

      <! for javaj documentation
      @<insert attributes>
      @<insert messages>

      <! for listix documentation
      @<insert aliases>
      @<insert syntaxes>
      @<insert parameters>
      @<insert options>

   <insert examples>
      CHECK, EVA, examples
      LOOP, EVA, examples
      @<insert into tGastExamples>

   <insert attributes>
      CHECK, EVA, attributes
      SET VAR, widgetName, @<name>
      LOOP, EVA, attributes
      @<insert into tZWidgetAttributes>

   <insert messages>
      CHECK, EVA, messages
      SET VAR, widgetName, @<name>
      LOOP, EVA, messages
      @<insert into tZWidgetMessages>

   <insert aliases>
      CHECK, EVA, aliases
      SET VAR, command, @<name>
      LOOP, EVA, aliases
      //INSERT INTO tLsxCmdAliases VALUES ('@<command>', '@<alias>');

   <insert syntaxes>
      CHECK, EVA, syntaxHeader
      SET VAR, command, @<name>
      LOOP, EVA, syntaxHeader
      @<insert into tlsxCmdSyntaxHead>

   <insert parameters>
      CHECK, EVA, syntaxParams
      SET VAR, command, @<name>
      LOOP, EVA, syntaxParams
      @<insert parameters of a syntax>

   <insert options>
      CHECK, EVA, options
      SET VAR, command, @<name>
      LOOP, EVA, options
      @<insert into tlsxCmdSyntaxOpts>


   <insert into tGastItemDoc>
      <! into TABLE tGastItemDoc  (name, structType, groupInfo, javaClass, importance, desc, helpText);
      //INSERT INTO tGastItemDoc VALUES ('@<name>', '@<docType>', '@<groupInfo>', '@<javaClass>', '@<importance>', '
      STRCONV, TEXT-STR, desc
      //', '
      STRCONV, TEXT-STR, help
      //');
      //

   <insert into tGastExamples>
      <! into TABLE tGastExamples (name, gastSample, sampleBody);

      //INSERT INTO tGastExamples VALUES ('@<name>', '
      STRCONV, TEXT-STR, gastSample
      //', '
      STRCONV, TEXT-STR, @<gastSample>
      //');
      //

   <insert into tZWidgetAttributes>
      <! into TABLE tZWidgetAttributes (widName, name, in_out, possibleValues, desc);

      //INSERT INTO tZWidgetAttributes VALUES ('@<widgetName>', '@<name>', '@<in_out>', '
      STRCONV, TEXT-STR, possibleValues
      //', '
      STRCONV, TEXT-STR, desc
      //');
      //

   <insert into tZWidgetMessages>
      <! into TABLE tZWidgetMessages  (widName, msg, in_out, desc);

      //INSERT INTO tZWidgetMessages VALUES ('@<widgetName>', '@<msg>', '@<in_out>', '
      STRCONV, TEXT-STR, desc
      //');
      //


   <insert into tlsxCmdSyntaxHead>
      <! for TABLE tlsxCmdSyntaxHead   (cmdName, synIndx, importance, desc);
      //INSERT INTO tlsxCmdSyntaxHead VALUES ('@<command>', '@<synIndx>', '@<importance>', '
      STRCONV, TEXT-STR, desc
      //');
      //

   <insert parameters of a syntax>
      SUB LOOP, insert into tlsxCmdSyntaxParams
              , WHILE, synIndx

   <insert into tlsxCmdSyntaxParams>
      <! for TABLE tlsxCmdSyntaxParams (cmdName, synIndx, paramIndx, paramName, defVal, desc);
      //INSERT INTO tlsxCmdSyntaxParams VALUES ('@<command>', '@<synIndx>', '@<:lsx ROW>', '@<name>', '
      STRCONV, TEXT-STR, defVal
      //', '
      STRCONV, TEXT-STR, desc
      //');
      //


   <insert into tlsxCmdSyntaxOpts>
      <! for TABLE tlsxCmdSyntaxOpts   (cmdName, synIndx, optionName, parameters, defVal, desc);
      //INSERT INTO tlsxCmdSyntaxOpts VALUES ('@<command>', '@<synIndx>', '@<optionName>', '
      STRCONV, TEXT-STR, parameters
      //', '
      STRCONV, TEXT-STR, defVal
      //', '
      STRCONV, TEXT-STR, desc
      //');
      //


#**#

-----------------------------------------------------------------------------------------------


messages



#**#


   <sql gastonaDocCreate>
      //BEGIN ;
      //
      ///* tables for all structType's */
      //CREATE TABLE tGastItemDoc  (name, structType, groupInfo, javaClass, importance, desc, helpText);
      //CREATE TABLE tGastExamples (name, gastSample, sampleBody);
      //
      ///* tables for structType javaj_widgets */
      //CREATE TABLE tZWidgetAttributes   (widName, name, in_out, possibleValues, desc);
      //CREATE TABLE tZWidgetMessages  (widName, msg, in_out, desc);
      //
      ///* tables for structType listix_commands */
      //CREATE TABLE tLsxCmdAliases      (cmdName, aliasName);
      //CREATE TABLE tlsxCmdSyntaxHead   (cmdName, synIndx, groupInfo, importance, desc);
      //CREATE TABLE tlsxCmdSyntaxParams (cmdName, synIndx, paramIndx, paramName, defVal, desc);
      //CREATE TABLE tlsxCmdSyntaxOpts   (cmdName, synIndx, optionName, parameters, defVal, desc);
      //
      //COMMIT ;
      //


   <void>

