   21.06.2009 19:52
   generateGastDocDB.gast

   Generates the database for the documentation of gastona (gastonaWelcome.gast)
   this includes gastona, javaj and listix issues

#gastona#

   <LOG WAKEUP>

   <NO sessionLog> c:\temp\repasa

#javaj#

   <frames> F, Gastona Doc DB Generator, 400

   <layout of F>
      EVA, 10, 10, 7, 7

      ,                       , X
      , lSource base directory, eSource base directory
      , lTarget database      , eTarget database
      , bGenerate
    X , oConsole, -

#data#
<!   <eSource base directory> A:\java\src
   <eSource base directory> ..\..\..
   <eTarget database>       gastonaDoc.db


   <sql gastonaDocCreate>
      ///* tables for all structType's */
      //CREATE TABLE tGastItemDoc  (name, structType, groupInfo, javaClass, importance, desc, helpText, UNIQUE(name));
      //CREATE TABLE tGastExamples (name, gastSample, sampleBody, UNIQUE(name, gastSample));
      //
      ///* tables for structType javaj_widgets */
      //CREATE TABLE tZWidgetAttributes (widName, name, in_out, possibleValues, desc, UNIQUE (widName, name));
      //CREATE TABLE tZWidgetMessages   (widName, msg, in_out, desc, UNIQUE (widName, msg));
      //
      ///* tables for structType listix_commands */
      //CREATE TABLE tLsxCmdAliases      (cmdName, aliasName);
      //CREATE TABLE tlsxCmdSyntaxHead   (cmdName, synIndx, importance, desc, UNIQUE (cmdName, synIndx));
      //CREATE TABLE tlsxCmdSyntaxParams (cmdName, synIndx, paramIndx, paramName, defVal, desc, UNIQUE (cmdName, synIndx, paramIndx));
      //CREATE TABLE tlsxCmdSyntaxOpts   (cmdName, synIndx, optionName, parameters, defVal, desc, UNIQUE (cmdName, synIndx, optionName));

      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_CreateTableConnections
      			, ARG TYPE, void
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, item, tZWidgetAttributes,  widName, tGastItemDoc, name
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, item, tZWidgetMessages,    widName, tGastItemDoc, name
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, item, tLsxCmdAliases,      cmdName, tGastItemDoc, name
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, item, tlsxCmdSyntaxHead,   cmdName, tGastItemDoc, name
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, head, tlsxCmdSyntaxParams, cmdName, tlsxCmdSyntaxHead, cmdName
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, head, tlsxCmdSyntaxParams, synIndx, tlsxCmdSyntaxHead, synIndx
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, head, tlsxCmdSyntaxOpts,   cmdName, tlsxCmdSyntaxHead, cmdName
      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, head, tlsxCmdSyntaxOpts,   synIndx, tlsxCmdSyntaxHead, synIndx

<!      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, //'item', 'tlsxCmdSyntaxParams', 'cmdName', 'tGastItemDoc', 'name'
<!      JAVA STATIC, de.elxala.db.dbMore.dbMore, getSQL_InsertConnection, //'item', 'tlsxCmdSyntaxOpts', 'cmdName', 'tGastItemDoc', 'name'


   <void>


#listix#

   <main0>
      <!VAR=, batchSQL, borcio.txt
      VAR=, batchSQL, @<:lsx tmp>
      <! ... ? get arguments (sourceDir, targetDB)

   <-- bGenerate>
      //generating Welcome database ...
      LSX, generateDB
      //
      //well done!
      //

   <generateDB>
      <! simplify db name
      SET VAR, db, @<eTarget database>

      <! destroy the database and create new schema
      GENERATE, @<db>, void
      DATABASE, @<db>, EXECUTE, @<sql gastonaDocCreate>

      SCAN, ADD, @<db>, @<eSource base directory>, +E, java, +E, gastDoc, -D, META-GASTONA, -D, android, -D, srcPARKING, -D, tests, -D, NOPRODUCT, -D, nopublic

      GEN, @<batchSQL>, generateDoc
      DATABASE, @<db>, EXECUTE
              , FROM FILE, @<batchSQL>

   <generateDoc>
      //BEGIN;
      //
      LOOP, SQL, @<db>, //SELECT fullPath FROM scan_all;
      @<extractDoc>
      ,,
      //
      //COMMIT;
      //

   <extractDoc>
      CHECK, LOAD UNIT, @<fullPath>, gastonaDoc, ///* no #gastonaDoc# unit found in @<fullPath> */
      ///* START PROCESSING @<fullPath> */
      //
      GENERATE, +, generateSql for Doc
              , LOAD FORMATS, oneDocToSql.lsx, listix
              , LOAD DATA   , @<fullPath>    , gastonaDoc
      //
      //

#**#
